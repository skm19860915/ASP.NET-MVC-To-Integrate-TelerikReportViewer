@using ePonti.BLL.Common
@{ var isEdit = ((bool?)ViewBag.IsEdit) ?? false;   }

@model ePonti.web.Models.SOModels.NewSO

@using (Html.BeginForm("create", "soinfo", FormMethod.Post, htmlAttributes: new { @class = "form-horizontal", id = "main-form" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(p => p.SOID)
    <div class="form-group">
        <div class="headerText"></div>
    </div>
    <div class="col-sm-offset-2 custom-font">
        @Html.ValidationSummary()
        <div class="main-form-alert alert soft-hide"></div>
    </div>
    <div class="container-fluid">
        <div class="row">
            <div class="form-group">
                @Html.LabelFor(p => p.Name, new { @class = "col-sm-2 control-label formLabelText" })
                <div class="col-lg-5 col-sm-6 formFeildText">
                    @Html.TextBoxFor(p => p.Name, new { @class = "form-control" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="form-group">
                @Html.LabelFor(p => p.SONumber, new { @class = "col-sm-2 control-label formLabelText" })
                <div class="col-lg-3 col-sm-4 formFeildText">
                    @Html.TextBoxFor(p => p.SONumber, new { @class = "form-control" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="form-group">
                @Html.LabelFor(p => p.JobID, new { @class = "col-sm-2 control-label formLabelText" })
                <div class="col-lg-4 col-sm-5 formFeildText">
                    @if (!isEdit)
                    {
                        @Html.DropDownListFor(p => p.JobID, ViewBag.Jobs as SelectList, new { @class = "form-control" })
                    }
                    else
                    {
                        @Html.DropDownListFor(p => p.JobID, ViewBag.Jobs as SelectList, new { @class = "form-control", @readonly = "readonly" })
                    }
                </div>
            </div>
        </div>
        <div class="row">
            <div class="form-group">
                @Html.LabelFor(p => p.TermID, new { @class = "col-sm-2 control-label formLabelText" })
                <div class="col-lg-3 col-sm-4 formFeildText">
                    @Html.DropDownListFor(p => p.TermID, ViewBag.Terms as SelectList, new { @class = "form-control" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="form-group">
                @Html.LabelFor(p => p.StatusID, new { @class = "col-sm-2 control-label formLabelText" })
                <div class="col-lg-3 col-sm-4 formFeildText">
                    @Html.DropDownListFor(p => p.StatusID, ViewBag.Status as SelectList, new { @class = "form-control" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="form-group">
                @Html.LabelFor(p => p.Date, new { @class = "col-sm-2 control-label formLabelText" })
                <div class="col-lg-2 col-sm-3 formFeildText">
                    @Html.TextBoxFor(p => p.Date, new { @class = "form-control date-picker", data_value = Model.Date.ToCustomDateStringForPicker() })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="form-group">
                @Html.LabelFor(p => p.Creator, new { @class = "col-sm-2 control-label formLabelText" })
                <div class="col-lg-3 col-sm-4 formFeildText">
                    @Html.TextBoxFor(p => p.Creator, new { @class = "form-control", @readonly = "readonly" })
                </div>
            </div>
        </div>
    </div>

}
