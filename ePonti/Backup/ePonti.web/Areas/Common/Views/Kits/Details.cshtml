@model ePonti.BOL.CoKits
@using System.Data.Entity.Core.Objects
@using ePonti.BOL
@using ePonti.BLL.Common;

@{
    ViewBag.Title = "Kit Info";
    var MasterKitID = ViewBag.MasterKitID;
    decimal? TotalHrs=0.0M, TotalPrice = 0.0M, TotalLabor = 0.0M, SubtotalInstalled = 0.0M, DiscountTotalInstalled=0.0M, TotalInstalled=0.0M;
}

<div class="editableArea" id="editableArea"></div>

<div class="container body-content" id="viewArea">
    <div class="col-sm-12 col-lg-12 pageHeader">
        <div class="col-sm-10 col-lg-11 homeMenuText">@ViewBag.Title</div>
        <div>
            @*Help - This will only display if the AcctItemID = NULL & Integration
                to QuickBooks is active allowing User to send info to QuickBooks*@
           
            @if (ViewBag.AcctKitID == null || ViewBag.AcctKitID == "")
            {                    
            <a href="#" class="homeLinks"><img src="~/images/QbButton.png" width="20"></a>
            }
            <span><a href="@Url.ActionPrev()" class="homeLinks"><img src="~/images/Cancel.png" width="20"></a></span>
        </div>
    </div>
    <div class="container-fluid">
        <div class="jumbotron jumbotron-fluid">
            <div class="row">
                <div class="col-sm-offset-8 col-sm-2 col-lg-offset-9 col-lg-2 dropdown buttons">
                    <button class="btn btn-default" onclick="openEdit()" id="open-edit-popup" role="button">Edit</button>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-8 col-lg-8">
                    <div class="row">
                        <div class="headerText">@Html.DisplayFor(model => model.KitName)</div>
                    </div>
                    <div class="row">
                        <div class="subText">@Html.DisplayFor(model => model.KitSku)</div>
                    </div>
                    <div class="row">
                        <div class="subText">@Html.DisplayFor(model => model.KitDescription)</div>
                    </div>
                </div>
            </div>
        </div>
        <div class="container-fluid">
            <div class="bs-component">
                <ul class="nav nav-tabs tabText">
                    <li class="active"><a href="#items" data-toggle="tab">Items</a></li>
                    <li><a href="#image" data-toggle="tab">Image</a></li>
                </ul>
                <div id="contactInfoTabs" class="tab-content">
                    <div class="tab-pane fade active in" id="items">
                    @using (Html.BeginForm("updatediscount", "kits", FormMethod.Post, htmlAttributes: new { @class = "form-horizontal", id = "update-discount-form" }))
                    {
                        @Html.HiddenFor(m => m.MasterKitID)
                                            <div class="row">
                            <div class="col-sm-4 col-lg-5 dropdown buttons">
                                <span class="alert part-alert"></span>
                            </div>
                            <div class="dropdown buttons">
                                @Html.ActionLink("Add", "AddKitItems", new { controller = "AddItems", area = "Common",id=Model.MasterKitID }, new { @class = "btn btn-default" })
                                <span>
                                    <button type="button" class="btn btn-default part-delete" role="button" data-url="@Url.Action("DeleteKitItems",new { controller = "AddItems", area = "Common"})">Delete</button>
                                </span>
                            </div>
                        </div>
                        <div class="custom-font">
                            <div class="main-form-alert alert soft-hide"></div>
                        </div>
                        <div class="col-sm-11 col-lg-11 list-group">
                            <table class="table table-hover grids">
                                <tr>
                                    <th width="20"></th>
                                    <th width="50"></th>
                                    <th>Part</th>
                                    <th class="col-sm-2 col-lg-2">Stage</th>
                                    <th width="100">Qty</th>
                                    <th class="col-sm-1 col-lg-1">Hrs</th>
                                    <th class="col-sm-1 col-lg-1">Price</th>
                                    <th class="col-sm-1 col-lg-1">Labor</th>
                                    <th class="col-sm-1 col-lg-1">Installed</th>
                                </tr>
                                @if (ViewBag.KitItems != null)
                                {
                                    var kititems = ViewBag.KitItems as List<ePonti.BOL.GetKitItemsByKitID_Result>;
                                    if (kititems!=null)
                                    {
                                        foreach (var item in kititems)
                                        {
                                <tr class="part">
                                    <td height="50">
                                        <input type="checkbox" class="partCheck" />
                                        <input type="hidden" class="part-id" value="@item.ViewID" />
                                    </td>
                                    <td>
                                        <a href="@Url.Action("details", "items", new { area = "common", id = item.ViewID })">
                                        <img src="~/images/View.png" width="20">
                                        </a>
                                    </td>
                                    <td>@item.Item</td>
                                    <td>@item.Stage</td>
                                    <td class="num-format">@item.Qty.ToFormattedString()</td>
                                    <td class="num-format">@item.Hrs.ToFormattedString()</td>
                                    <td class="num-format">@item.Price.ToFormattedString()</td>
                                    <td class="num-format">@item.Labor.ToFormattedString()</td>
                                    <td class="num-format">@item.Installed.ToFormattedString()</td>
                                @{ 
                                    TotalHrs += item.Hrs;
                                    TotalPrice += item.Price;
                                    TotalLabor += item.Labor;
                                    SubtotalInstalled += item.Installed;
                                }
                                </tr>
                                    }
                                <tr class="footer">
                                    <td></td>
                                    <td></td>
                                    <td></td>
                                    <td><strong>Subtotals</strong></td>
                                    <td></td>
                                    <td class="num-format total-format">@TotalHrs.ToFormattedString()</td>
                                    <td class="num-format total-format">@TotalPrice.ToFormattedString()</td>
                                    <td class="num-format total-format">@TotalLabor.ToFormattedString()</td>
                                    <td class="num-format total-format">@SubtotalInstalled.ToFormattedString()</td>
                                </tr>
                                <tr class="footer">
                                    <td></td>
                                    <td></td>
                                    <td></td>
                                    <td><strong>Discount %</strong></td>
                                    <td>
                                    @Html.TextBoxFor(p => p.KitDiscount, new { @class = "form-control perc num-format", data_value = Model.KitDiscount, data_val = "false" })
                                    </td>
                                    <td></td>
                                    <td></td>
                                    <td></td>
                                    @{ 
                                        DiscountTotalInstalled = ((SubtotalInstalled * (Model.KitDiscount/100)) * (-1));
                                            }
                                    <td class="num-format total-format">@DiscountTotalInstalled.ToFormattedString()</td>
                                </tr>
                                <tr class="footer">
                                    <td></td>
                                    <td></td>
                                    <td></td>
                                    <td><strong>Total</strong></td>
                                    <td></td>
                                    <td></td>
                                    <td></td>
                                    <td></td>
                                    @{ 
                                        TotalInstalled = SubtotalInstalled + DiscountTotalInstalled;
                                    }
                                    <td class="num-format total-format">@TotalInstalled.ToFormattedString()</td>
                                </tr>
                                            }
                                        }
                            </table>
                        </div>
                        <div class="row form-group">
                            <div class="col-sm-offset-7 col-lg-offset-7 col-sm-2 col-lg-2 dropdown buttons">
                                <a role="button" class="homeLinks editItem edit-discount update-discount"><img src="~/images/Save.png" width="20"></a>
                            </div>
                        </div>
                        }
                    </div>
                    <div class="tab-pane fade" id="image">
                        <div class="form-group">
                            <div class="headerText"></div>
                        </div>
                        <div class="form-group">
                            <div class="headerText">@Html.DisplayFor(model => model.KitImage)</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script>
        $('#KitDiscount').val(Number($('#KitDiscount').data('value')).toFixed(2) + '%');
        $('#open-edit-popup').on('click', function () {
            $('#editableArea').load('@Url.Action("edit",new { id=Model.MasterKitID })', function () {
            });
        })

        $('.datetime-picker').removeAttr("data-val-date");//disable date validation

        $(document).on('click','.save-event', function () {
            var $form = $('#main-form');
            if ($form.valid()) {
                $('.validation-summary-errors').find('li').remove();
                var $alert = $('.main-form-alert');

                $.ajax({
                    url: $form.attr('action'),
                    type: 'POST',
                    data: $form.serialize(),
                    success: function (res) {

                        if (res.status == 'error') {

                            var errors = 'Enter correct data and retry.'
                            if (res.errors && res.errors.length > 0) {
                                errors = res.errors.join('<br>');
                            }
                            $alert.html(errors);
                            showAlert($alert, 'danger', -1);
                        }
                        else if (res.status = 'success') {
                            $alert.html('Note saved.');
                            showAlert($alert, 'success');
                            document.location = '/Common/Kits/details/' + res.MasterKitID
                        }
                    }
                });
            }
        })

        $(document).on('click', '.edit-discount', function () {
            var $form = $('#update-discount-form');
            debugger
            if (~$('#KitDiscount').val().indexOf('%')) {
                $('#KitDiscount').val($('#KitDiscount').val().slice(0, -1));
            }
            if ($form.valid()) {
                $('.validation-summary-errors').find('li').remove();
                var $alert = $('.main-form-alert');                

                $.ajax({
                    url: $form.attr('action'),
                    type: 'POST',
                    data: $form.serialize(),
                    success: function (res) {                        
                        if (res.status == 'error') {                           
                            var errors = 'Enter correct data and retry.'
                            if (res.errors && res.errors.length > 0) {
                                errors = res.errors.join('<br>');
                            }
                            $alert.html(errors);
                            showAlert($alert, 'danger', -1);
                        }
                        else if (res.status = 'success') {
                            $alert.html('Note saved.');
                            showAlert($alert, 'success');
                            document.location = 'javascript:history.go(0)'
                        }
                    }
                });
            }
        })
</script>
}
