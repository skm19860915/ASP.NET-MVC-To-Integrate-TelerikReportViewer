@model ePonti.web.Models.PeopleModels.NewContact

@{
    ViewBag.Title = "New Contact Info";
    Layout = "~/Areas/Mobile/Views/Shared/_FormLayout.cshtml";

}

<div class="container-fluid" id="editableView">
    <div class="col-xs-12 pageHeader">
        <div class="col-xs-8 homeMenuText">@ViewBag.Title</div>
        <div>
            <a href="#" class="homeLinks save-contact"><img src="~/images/Save.png" width="20"></a>
            <span><a href="javascript:closeEdit()" class="homeLinks"><img src="~/images/Cancel.png" width="20"></a></span>
        </div>
    </div>
    <div class="container-fluid">
        @using (Html.BeginForm("create", "mcontactinfo", new { area = "mobile" }, FormMethod.Post, htmlAttributes: new { @class = "form-horizontal", id = "formNewContact" }))
        {
            @Html.AntiForgeryToken()
            <div class="form-group">
                <div class="headerText"></div>
            </div>
            <div class="col-xs-offset-1 custom-font">
                @Html.ValidationSummary()
                <div class="main-form-alert alert soft-hide"></div>
            </div>
            <div class="form-group">
                <div class="row">
                    <div class="subText">First</div>
                </div>
                <div class="col-xs-11 formFeildText">
                    @Html.TextBoxFor(p => p.First, new { @class = "form-control formFeildText" })
                </div>
            </div>
            <div class="form-group">
                <div class="row">
                    <div class="subText">Last</div>
                </div>
                <div class="col-xs-11 formFeildText">
                    @Html.TextBoxFor(p => p.Last, new { @class = "form-control formFeildText" })
                </div>
            </div>
            <div class="form-group">
                <div class="row">
                    <div class="msubText">Company</div>
                </div>
                <div class="col-xs-11 formFeildText">
                    @Html.TextBoxFor(p => p.Company, new { @class = "form-control formFeildText" })
                </div>
            </div>
            <div class="form-group">
                <div class="row">
                    <div class="msubText">Phone</div>
                </div>
                <div class="col-xs-8 formFeildText">
                    @Html.TextBoxFor(p => p.Phone, new { @class = "form-control formFeildText format-phone", pattern = "[0-9]{10}" })
                </div>
            </div>
            <div class="form-group">
                <div class="row">
                    <div class="msubText">Mobile</div>
                </div>
                <div class="col-xs-8 formFeildText">
                    @Html.TextBoxFor(p => p.Mobile, new { @class = "form-control formFeildText format-phone", pattern = "[0-9]{10}" })
                </div>
            </div>
            <div class="form-group">
                <div class="row">
                    <div class="msubText">Email</div>
                </div>
                <div class="col-xs-11 formFeildText">
                    @Html.TextBoxFor(p => p.Email, new { @class = "form-control formFeildText" })
                </div>
            </div>
            <div class="form-group">
                <div class="row">
                    <div class="msubText">Address</div>
                </div>
                <div class="col-xs-11 formFeildText">
                    @Html.TextBoxFor(p => p.Address1, new { @class = "form-control formFeildText" })
                </div>
            </div>
            <div class="form-group">
                <div class="row">
                    <div class="msubText"></div>
                </div>
                <div class="col-xs-11 formFeildText">
                    @Html.TextBoxFor(p => p.Address2, new { @class = "form-control formFeildText" })
                </div>
            </div>
            <div class="form-group">
                <div class="row">
                    <div class="msubText">City</div>
                </div>
                <div class="col-xs-8 formFeildText">
                    @Html.TextBoxFor(p => p.City, new { @class = "form-control formFeildText" })
                </div>
            </div>
            <div class="form-group">
                <div class="row">
                    <div class="msubText">State</div>
                </div>
                <div class="col-xs-6 formFeildText">
                    @Html.TextBoxFor(p => p.State, new { @class = "form-control formFeildText" })
                </div>
            </div>
            <div class="form-group">
                <div class="row">
                    <div class="msubText">Zip</div>
                </div>
                <div class="col-xs-6 formFeildText">
                    @Html.TextBoxFor(p => p.Zip, new { @class = "form-control formFeildText" })
                </div>
            </div>
            <div class="form-group">
                <div class="row">
                    <div class="msubText">Country</div>
                </div>
                <div class="col-xs-9 formFeildText">
                    @Html.DropDownListFor(p => p.CountryID, ViewBag.Country as SelectList, "Select", new { @class = "form-control formFeildText" })
                </div>
            </div>
            <div class="form-group">
                <div class="row">
                    <div class="msubText">Type</div>
                </div>
                <div class="col-xs-8 formFeildText">
                    @Html.DropDownListFor(p => p.TypeID, ViewBag.ContactType as SelectList, "Select", new { @class = "form-control formFeildText" })
                </div>
            </div>
            <div class="form-group">
                <div class="row">
                    <div class="msubText">Status</div>
                </div>
                <div class="col-xs-8 formFeildText">
                    @Html.DropDownListFor(p => p.StatusID, ViewBag.ContactStatus as SelectList, "Select", new { @class = "form-control formFeildText" })
                </div>
            </div>
            <div class="form-group">
                <div class="row">
                    <div class="msubText">Owner</div>
                </div>
                <div class="col-xs-8 formFeildText">
                    @Html.DropDownListFor(p => p.OwnerID, ViewBag.Owner as SelectList, new { @class = "form-control formFeildText" })
                </div>
            </div>
            <div class="form-group">
                <div class="headerText"></div>
            </div>
        }

    </div>
</div>

@section scripts{
    <script>

        $('.save-contact').on('click', function () {
            var $form = $('#formNewContact');
            if ($form.valid()) {
                $('.validation-summary-errors').find('li').remove();
                var $alert = $('.new-cotnact-alert');

                $.ajax({
                    url: $form.attr('action'),
                    type: 'POST',
                    data: $form.serialize(),
                    success: function (res) {
                        console.log(res);
                        if (res.status == 'error') {
                            var errors = 'Enter correct data and retry.'
                            if (res.errors && res.errors.length > 0) {
                                errors = res.errors.join('<br>');
                            }
                            $alert.html(errors);
                            showAlert($alert, 'danger', -1);
                        }
                        else if (res.status = 'success') {
                            $alert.html('Contact saved.');
                            showAlert($alert, 'success');
                            var url = '@Url.Action("details",new {id="CONTACTID", nav=Request.QueryString["nav"]})'
                            document.location = url.replace('CONTACTID', res.contactID);
                        }
                    }
                });
                //.fail(function () {
                //    $alert.html('Some error occurred while processing your request. Please retry.');
                //    showAlert($alert, 'error');
                //});
            }
        })
    </script>


}
