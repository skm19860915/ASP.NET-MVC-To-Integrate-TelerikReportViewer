@model ePonti.web.Models.CallModels.NewCall

@{
    ViewBag.Title = "New Call Info";
    Layout = "~/Areas/Mobile/Views/Shared/_FormLayout.cshtml";

}

<div class="container-fluid">
    <div class="col-xs-12 pageHeader">
        <div class="col-xs-8 homeMenuText">@ViewBag.Title</div>
        <div>
            <a href="#" class="homeLinks save-call"><img src="~/images/Save.png" width="20"></a>
            <span><a href="javascript:closeEdit()" class="homeLinks"><img src="~/images/Cancel.png" width="20"></a></span>
        </div>
    </div>
    @using (Html.BeginForm("create", "calls", FormMethod.Post, htmlAttributes: new { @class = "form-horizontal", id = "main-form" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-group">
            <div class="headerText"></div>
        </div>
        <div class="col-xs-offset-1 custom-font">
            @Html.ValidationSummary()
            <div class="main-form-alert alert soft-hide"></div>
        </div>
        <div class="form-group">
            @Html.LabelFor(p => p.Subject, new { @class = "col-xs-2 control-label formLabelText" })
            <div class="col-xs-9 formFeildText">
                @Html.TextBoxFor(p => p.Subject, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(p => p.ContactID, new { @class = "col-xs-2 control-label formLabelText" })
            <div class="col-xs-9 formFeildText">
                @Html.DropDownListFor(p => p.ContactID, ViewBag.Contacts as SelectList, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(p => p.Phone, new { @class = "col-xs-2 control-label formLabelText" })
            <div class="col-xs-5 formFeildText">
                @Html.TextBoxFor(p => p.Phone, new { @class = "form-control phone format-phone" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(p => p.Mobile, new { @class = "col-xs-2 control-label formLabelText" })
            <div class="col-xs-5 formFeildText">
                @Html.TextBoxFor(p => p.Mobile, new { @class = "form-control mobile format-phone" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(p => p.JobID, new { @class = "col-xs-2 control-label formLabelText" })
            <div class="col-xs-9 formFeildText">
                @Html.DropDownListFor(p => p.JobID, ViewBag.Jobs as SelectList, new { @class = "form-control jobs" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(p => p.StatusID, new { @class = "col-xs-2 control-label formLabelText" })
            <div class="col-xs-6 formFeildText">
                @Html.DropDownListFor(p => p.StatusID, ViewBag.Status as SelectList, new { @class = "form-control status" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(p => p.PurposeID, new { @class = "col-xs-2 control-label formLabelText" })
            <div class="col-xs-6 formFeildText">
                @Html.DropDownListFor(p => p.PurposeID, ViewBag.Purpose as SelectList, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(p => p.Date, new { @class = "col-xs-2 control-label formLabelText" })
            <div class="col-xs-3 formFeildText">
                @Html.TextBoxFor(p => p.Date, new { @class = "form-control datetime-picker" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(p => p.Duration, new { @class = "col-xs-2 control-label formLabelText" })
            <div class="col-xs-2 formFeildText">
                @Html.TextBoxFor(p => p.Duration, new { @class = "form-control number-spinner" })
            </div>
            <div class="formFeildText">
                <label class="control-label formLabelText">hours</label>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(p => p.ResourceID, new { @class = "col-xs-2 control-label formLabelText" })
            <div class="col-xs-8 formFeildText">
                @Html.DropDownListFor(p => p.ResourceID, ViewBag.Resources as SelectList, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(p => p.Notes, new { @class = "col-xs-2 control-label formLabelText" })
            <div class="col-xs-9 formFeildText">
                @Html.TextAreaFor(p => p.Notes, new { @class = "form-control", row = "10" })
            </div>
        </div>
        <div class="form-group">
            <div class="headerText"></div>
        </div>
    }
</div>

@section scripts{
    <script>
        $('.datetime-picker').removeAttr("data-val-date");//disable date validation
        $('#ContactID').on('change', function () {
            var contactID = $(this).val();
            if (!contactID) { return; }

            $.get('@Url.Action("GetContactData")', { Id: contactID }, function (res) {

                if (res) {
                    $('.phone').val(res.phone);
                    $('.mobile').val(res.mobile);
                    fillDropdown($('.jobs'), res.jobs, 'Project', 'ViewID');
                    maskPlainValues();
                }
            });
        });

        $('.save-call').on('click', function () {
            var $form = $('#main-form');
            if ($form.valid()) {
                $('.validation-summary-errors').find('li').remove();
                var $alert = $('.main-form-alert');

                $.ajax({
                    url: $form.attr('action'),
                    type: 'POST',
                    data: $form.serialize(),
                    success: function (res) {
                        if (res.status == 'error') {
                            var errors = 'Enter correct data and retry.'
                            if (res.errors && res.errors.length > 0) {
                                errors = res.errors.join('<br>');
                            }
                            $alert.html(errors);
                            showAlert($alert, 'danger', -1);
                        }
                        else if (res.status = 'success') {
                            $alert.html('Call saved.');
                            showAlert($alert, 'success');
                            //history.go(-1); history.go(-1);
                            document.location = '@Url.ActionPrev()'
                        }
                    }
                });
            }
        });

    </script>
}
