@using GridMvc.Columns
@using ePonti.BOL
@model GridMvc.IGrid
@if (Model == null) { return; }
@if (Model.RenderOptions.RenderRowsOnly)
{
    @RenderGridBody();
}
else
{
    <div class="grid-mvc" data-lang="@Model.Language" data-gridname="@Model.RenderOptions.GridName" data-selectable="@Model.RenderOptions.Selectable.ToString().ToLower()" data-multiplefilters="@Model.RenderOptions.AllowMultipleFilters.ToString().ToLower()">
        <div class="grid-wrap">
            <table class="table table-hover grids table-striped grid-table">
                @* Draw grid header *@
                <thead>
                    @RenderGridHeader()
                </thead>
                <tbody>
                    @RenderGridBody()
                </tbody>
            </table>
            @RenderGridFooter()
        </div>
    </div>
}
@helper RenderGridBody()
{
if (!Model.ItemsToDisplay.Any())
{
        <tr class="grid-empty-text">
            <td colspan="@Model.Columns.Count()">
                @Model.EmptyGridText
            </td>
        </tr>
}
else
{
    decimal? TotalHrs = 0.0M, TotalPrice = 0.0M, TotalLabor = 0.0M, SubtotalInstalled = 0.0M;
    foreach (object item in Model.ItemsToDisplay)
    {
            <tr class="grid-row @Model.GetRowCssClasses(item)">
                @foreach (GridMvc.Columns.IGridColumn column in Model.Columns)
                {
                    @column.CellRenderer.Render(column, column.GetCell(item))
                }
            </tr>
        GetProjectInfoPartsByProjectID_Result i_item = (GetProjectInfoPartsByProjectID_Result)item;
        TotalHrs += i_item.Hrs;
        TotalPrice += i_item.Price;
        TotalLabor += i_item.Labor;
        SubtotalInstalled += i_item.Installed;
    }
        <tr class="footer">
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td></td>
            <td><strong>Totals</strong></td>
            <td class="subTextRight num-format total-format">@TotalPrice.ToFormattedString(2)</td>
            <td class="subTextRight num-format total-format">@TotalHrs.ToFormattedString(2)</td>
            <td class="subTextRight num-format total-format">@TotalLabor.ToFormattedString(2)</td>
            <td class="subTextRight num-format total-format">@SubtotalInstalled.ToFormattedString(2)</td>
        </tr>
}
}
@helper RenderGridHeader()
{
    <tr>
        @foreach (GridMvc.Columns.IGridColumn column in Model.Columns)
        {
            @column.HeaderRenderer.Render(column)
        }
    </tr>
}
@helper RenderGridFooter()
{
    <div class="grid-footer">
        @if (Model.RenderOptions.ShowGridItemsCount)
        {
            <div class="grid-itemscount">
                <span class="grid-itemscount-label">@Model.RenderOptions.GridCountDisplayName:</span>
                <span class="grid-itemscount-caption">@Model.ItemsCount</span>
            </div>
        }
        @if (Model.EnablePaging && Model.Pager != null)
        {
            @Html.Partial(Model.Pager.TemplateName, Model.Pager)
        }
    </div>
}
