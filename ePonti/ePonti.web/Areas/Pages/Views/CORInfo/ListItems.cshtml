@using ePonti.BOL
@using System.Data.Entity.Core.Objects
@using GridMvc.Html;
@{
    bool isAddition = true;
    if (ViewBag.Action != null)
    {
        isAddition = ViewBag.Action == "Add";
    }

    ViewBag.Title = (isAddition ? "Add" : "Remove") + "  Items";

    Layout = "~/Areas/Common/Views/Shared/_Layout.cshtml";
}

<div id="viewArea" class="@("page-items-"+ (isAddition?"add":"remove"))">
    <div class="container-fluid">
        <div class="col-sm-12 col-lg-12 pageHeader">
            <div class="col-sm-10 col-lg-11 homeMenuText">@ViewBag.Title</div>
            <div>
                <a href="#" class="homeLinks update-items"><img src="~/images/Save.png" width="20"></a>
                <span><a href="@Url.ActionPrev()" class="homeLinks"><img src="~/images/Cancel.png" width="20"></a></span>
                <input type="hidden" Id="CorID" value="@ViewBag.CorID" />
            </div>
        </div>
        <div class="row">
            <div class="headerText"></div>
        </div>
        <div class="row">
            <div class="headerText"></div>
        </div>
        @if (isAddition)
        {
            <div class="col-sm-11 col-lg-11 row">
                <div class="col-sm-1 col-lg-1 formFeildText"></div>
                <label class="col-sm-1 col-lg-1 control-label formLabelText">Division</label>
                <div class="col-sm-4 col-lg-3 formFeildText">
                    @Html.DropDownList("Division", ViewBag.Divisions as SelectList, new { @class = "form-control" })
                </div>
                <label class="col-sm-1 col-lg-1 control-label formLabelText">Area</label>
                <div class="col-sm-4 col-lg-3 formFeildText" title="Press and hold ctrl to select multiple">
                    @Html.ListBox("Area", ViewBag.Areas as MultiSelectList, new { @class = "form-control", style = "height:100px;" })
                </div>
                <label class="col-sm-1 col-lg-1 control-label formLabelText">Qty</label>
                <div class="col-sm-1 col-lg-1 formFeildText">
                    <input class="form-control" id="Qty" type="number" value="1">
                </div>
            </div>
            <div class="row">
                <div class="headerText"></div>
            </div>
            <div class="row">
                <div class="headerText"></div>
            </div>
            <div class="row">
                <div class="headerText"></div>
            </div>
            <div class="row">
                <div class="col-sm-3 col-lg-2">
                    <div class="row">
                        <div class="headerText"></div>
                    </div>
                    <div class="row">
                        <div class="headerText"></div>
                    </div>
                    <div class="leftfilters">
                        <div class="row">
                            @Html.TextBox("SearchText", "", new { id = "txtSearch", placeholder = "Enter model", @class = "srch_text" })
                        </div>
                        <div class="row">
                            <div class="headerText"></div>
                        </div>
                        <h4>Group</h4>
                        <div class="row">
                            <div class="headerText"></div>
                        </div>
                        <h4>Manufacturer</h4>
                        <div class="row">
                            <div class="headerText"></div>
                        </div>
                        <h4>Stage</h4>
                        <div class="row">
                            <div class="headerText"></div>
                        </div>
                        <div class="buttons formLabelText">
                            <input type="button" class="col-sm-2 col-lg-1 btn btn-default clearleftfilter" value="Clear" />
                            <input type="button" class="col-sm-2 col-lg-1 btn btn-default updateleftfilter" value="Update" />
                        </div>
                    </div>
                </div>
                <div class="col-sm-8 col-lg-9 list-group item-list">
                    <div class="item-list">
                        @Html.Grid(ViewBag.Items as List<GetProjectInfoPartsAddBySiteCoID_Result>).Columns(columns =>
                              {
                                  columns.Add().Encoded(false).Sanitized(false).SetWidth(20).RenderValueAs(s => "<input type=\"checkbox\" class=\"checkitem\" data-id=\"" + s.ViewID + "\" /><input type =\"hidden\" class=\"item-id\" value=\"" + s.ViewID + "\" />");
                                  columns.Add(s => s.Group).Sortable(true).Css("subText col-sm-3 col-lg-3").Titled("Group").Filterable(true);
                                  columns.Add(s => s.Manufacturer).Sortable(true).Css("subText col-sm-3 col-lg-2").Titled("Manufacturer");
                                  columns.Add(s => s.Item).Sortable(true).Css("subText").Titled("Model");
                                  columns.Add(s => s.Stage).Sortable(true).Css("subText col-sm-2 col-lg-1").Titled("Stage").Filterable(true);
                              }).SetRowCssClasses(s => "item-row")
                    </div>
                </div>
            </div>
        }
        else
        {
            <div class="row">
                <div class="col-sm-3 col-lg-2">
                    <div class="row">
                        <div class="headerText"></div>
                    </div>
                    <div class="row">
                        <div class="headerText"></div>
                    </div>
                    <div class="leftfilters">
                        <div class="row">
                            @Html.TextBox("SearchText", "", new { id = "txtSearch", placeholder = "Enter model", @class = "srch_text" })
                        </div>
                        <div class="row">
                            <div class="headerText"></div>
                        </div>
                        <h4>Area</h4>
                        <div class="row">
                            <div class="headerText"></div>
                        </div>
                        <h4>Division</h4>
                        <div class="row">
                            <div class="headerText"></div>
                        </div>
                        <h4>Stage</h4>
                        <div class="row">
                            <div class="headerText"></div>
                        </div>
                        <div class="buttons formLabelText">
                            <input type="button" class="col-sm-2 col-lg-1 btn btn-default clearleftfilter" value="Clear" />
                            <input type="button" class="col-sm-2 col-lg-1 btn btn-default updateleftfilter" value="Update" />
                        </div>
                    </div>
                </div>
                <div class="col-sm-8 col-lg-9 list-group item-list">
                    <div class="item-list">
                        @Html.Grid(ViewBag.Items as List<GetProjectInfoPartsByProjectID_Result>).Columns(columns =>
                              {
                                  columns.Add().Encoded(false).Sanitized(false).SetWidth(20).RenderValueAs(s => "<input type=\"checkbox\" class=\"checkitem\" data-id=\"" + s.ViewID + "\" /><input type =\"hidden\" class=\"item-id\" value=\"" + s.ViewID + "\" />");
                                  columns.Add(s => s.Area).Sortable(true).Css("subText col-sm-3 col-lg-3").Titled("Area").Filterable(true);
                                  columns.Add(s => s.Division).Sortable(true).Css("subText col-sm-3 col-lg-2").Titled("Division");
                                  columns.Add(s => s.Item).Sortable(true).Css("subText").Titled("Model");
                                  columns.Add(s => s.Stage).Sortable(true).Css("subText col-sm-2 col-lg-1").Titled("Stage").Filterable(true);
                              }).SetRowCssClasses(s => "item-row")
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@section scripts{
    <script>
        $('.page-items-add .update-items').on('click', function () {
            console.log('asd');
            var areaids = $('#Area').val();
            var items = $('.item-list').find('.item-row .checkitem:checked').siblings('.item-id').map(function () { return $(this).val() }).get();
            if (areaids.length == 0) {
                $('#Area').addClass('input-validation-error');
                return;
            } else {
                $('#Area').removeClass('input-validation-error');
            }
            if (items.length == 0) {
                return;
            }

            var data = {
                corId: $('#CorID').val(),
                projectid: queryString('projectID'),
                areaids: areaids,
                divisionid: $('#Division').val(),
                quantity: $('#Qty').val() || 1,
                items: items
            };

            $.post('@Url.Action("AddItems")', data, function (res) {
                if (res && res.status === 'success') {
                    document.location = '@Url.ActionPrev()';
                }
            });
        });

        $('.page-items-remove .update-items').on('click', function () {

            var items = $('.item-list').find('.item-row .checkitem:checked').siblings('.item-id').map(function () { return $(this).val() }).get();

            if (items.length == 0) {
                return;
            }

            var data = {
                corId: $('#CorID').val(),
                projectid: queryString('projectID'),
                items: items
            };

            $.post('@Url.Action("RemoveItems")', data, function (res) {
                if (res && res.status === 'success') {
                    document.location = '@Url.ActionPrev()';
                }
            });
        })
    </script>
}
