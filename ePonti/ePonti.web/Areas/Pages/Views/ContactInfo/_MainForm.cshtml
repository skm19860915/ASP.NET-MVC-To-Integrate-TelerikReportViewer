@model ePonti.BOL.GetContactInfoByContactID_Result

@using (Html.BeginForm((string)ViewBag.FormAction, "contactinfo", FormMethod.Post, htmlAttributes: new { @class = "form-horizontal", id = "formNewContact" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(p => p.ViewID)

    <div class="form-group">
        <div class="headerText"></div>
    </div>
    <div class="col-xs-offset-1 col-sm-offset-1 custom-font">
        @Html.ValidationSummary()
        <div class="main-form-alert alert soft-hide"></div>
    </div>
    <div class="form-group">
        <div class="col-xs-2 col-sm-2 control-label formLabelText">First</div>
        <div class="col-xs-9 col-sm-6 formFeildText">
            @Html.TextBoxFor(p => p.ContactFirst, new { @class = "form-control formFeildText" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-xs-2 col-sm-2 control-label formLabelText">Last</div>
        <div class="col-xs-9 col-sm-6 formFeildText">
            @Html.TextBoxFor(p => p.ContactLast, new { @class = "form-control formFeildText" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-xs-2 col-sm-2 control-label formLabelText">Company</div>
        <div class="col-xs-9 col-sm-6 formFeildText">
            @Html.TextBoxFor(p => p.ContactCompany, new { @class = "form-control formFeildText con_company" })
            @Html.DropDownList("CompanyId", ViewBag.ContactCo as SelectList, new { @class = "form-control formFeildText DDcompanylist" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-xs-2 col-sm-2 control-label formLabelText">Phone</div>
        <div class="col-xs-9 col-sm-3 formFeildText">
            @Html.TextBoxFor(p => p.Phone, new { @class = "form-control formFeildText format-phone", pattern = "[0-9]{10}" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-xs-2 col-sm-2 control-label formLabelText">Mobile</div>
        <div class="col-xs-9 col-sm-3 formFeildText">
            @Html.TextBoxFor(p => p.Mobile, new { @class = "form-control formFeildText format-phone", pattern = "[0-9]{10}" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-xs-2 col-sm-2 control-label formLabelText">Email</div>
        <div class="col-xs-9 col-sm-6 formFeildText">
            @Html.TextBoxFor(p => p.ContactEmail, new { @class = "form-control formFeildText" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-xs-2 col-sm-2 control-label formLabelText">Address</div>
        <div class="col-xs-9 col-sm-6 formFeildText">
            @Html.TextBoxFor(p => p.ContactAddress1, new { @class = "form-control formFeildText" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-xs-2 col-sm-2 control-label formLabelText"></div>
        <div class="col-xs-9 col-sm-6 formFeildText">
            @Html.TextBoxFor(p => p.ContactAddress2, new { @class = "form-control formFeildText" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-xs-2 col-sm-2 control-label formLabelText">City</div>
        <div class="col-xs-9 col-sm-4 formFeildText">
            @Html.TextBoxFor(p => p.ContactCity, new { @class = "form-control formFeildText" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-xs-2 col-sm-2 control-label formLabelText">State</div>
        <div class="col-xs-9 col-sm-3 formFeildText">
            @Html.TextBoxFor(p => p.ContactState, new { @class = "form-control formFeildText" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-xs-2 col-sm-2 control-label formLabelText">Zip</div>
        <div class="col-xs-9 col-sm-2 formFeildText">
            @Html.TextBoxFor(p => p.ContactZip, new { @class = "form-control formFeildText" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-xs-2 col-sm-2 control-label formLabelText">Country</div>
        <div class="col-xs-9 col-sm-3 formFeildText">
            @Html.DropDownListFor(p => p.CountryID, ViewBag.Country as SelectList, "Select", new { @class = "form-control formFeildText" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-xs-2 col-sm-2 control-label formLabelText">Type</div>
        <div class="col-xs-9 col-sm-2 formFeildText">
            @Html.DropDownListFor(p => p.ContactTypeID, ViewBag.ContactType as SelectList, "Select", new { @class = "form-control formFeildText" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-xs-2 col-sm-2 control-label formLabelText">Subtype</div>
        <div class="col-xs-9 col-sm-2 formFeildText">
            @Html.DropDownListFor(p => p.ContactSubtypeID, ViewBag.ContactSubType as SelectList, "Select", new { @class = "form-control formFeildText" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-xs-2 col-sm-2 control-label formLabelText">FaceBook</div>
        <div class="col-xs-9 col-sm-6 formFeildText">
            @Html.TextBoxFor(p => p.FaceBook, new { @class = "form-control formFeildText" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-xs-2 col-sm-2 control-label formLabelText">LinkedIn</div>
        <div class="col-xs-9 col-sm-6 formFeildText">
            @Html.TextBoxFor(p => p.LinkedIn, new { @class = "form-control formFeildText" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-xs-2 col-sm-2 control-label formLabelText">Skype</div>
        <div class="col-xs-9 col-sm-6 formFeildText">
            @Html.TextBoxFor(p => p.Skype, new { @class = "form-control formFeildText" })
        </div>
    </div>
    if (ViewBag.ContactCustoms != null && ViewBag.ContactCustoms.Show1 != null && ViewBag.ContactCustoms.Show1 == true)
    {
    <div class="form-group">
        <label class="col-xs-2 col-sm-2 control-label formLabelText">@ViewBag.ContactCustoms.CustomField1</label>
        <div class="col-xs-9 col-sm-6 formFeildText">
            @Html.TextBoxFor(p => p.Custom1, new { @class = "form-control formFeildText" })
        </div>
    </div>
    }
    if (ViewBag.ContactCustoms != null && ViewBag.ContactCustoms.Show2 != null && ViewBag.ContactCustoms.Show2 == true)
    {
    <div class="form-group">
        <label class="col-xs-2 col-sm-2 control-label formLabelText">@ViewBag.ContactCustoms.CustomField2</label>
        <div class="col-xs-9 col-sm-6 formFeildText">
            @Html.TextBoxFor(p => p.Custom2, new { @class = "form-control formFeildText" })
        </div>
    </div>
    }
    if (ViewBag.ContactCustoms != null && ViewBag.ContactCustoms.Show3 != null && ViewBag.ContactCustoms.Show3 == true)
    {
    <div class="form-group">
        <label class="col-xs-2 col-sm-2 control-label formLabelText">@ViewBag.ContactCustoms.CustomField3</label>
        <div class="col-xs-9 col-sm-6 formFeildText">
            @Html.TextBoxFor(p => p.Custom3, new { @class = "form-control formFeildText" })
        </div>
    </div>
    }
    if (ViewBag.ContactCustoms != null && ViewBag.ContactCustoms.Show4 != null && ViewBag.ContactCustoms.Show4 == true)
    {
    <div class="form-group">
        <label class="col-xs-2 col-sm-2 control-label formLabelText">@ViewBag.ContactCustoms.CustomField4</label>
        <div class="col-xs-9 col-sm-6 formFeildText">
            @Html.TextBoxFor(p => p.Custom4, new { @class = "form-control formFeildText" })
        </div>
    </div>
    }
    <div class="form-group">
        <div class="col-xs-2 col-sm-2 control-label formLabelText">Status</div>
        <div class="col-xs-9 col-sm-2 formFeildText">
            @Html.DropDownListFor(p => p.ContactStatusID, ViewBag.ContactStatus as SelectList, new { @class = "form-control formFeildText", required = (string)null })
        </div>
    </div>
    <div class="form-group">
        <div class="col-xs-2 col-sm-2 control-label formLabelText">Owner</div>
        <div class="col-xs-9 col-sm-3 formFeildText">
            @Html.DropDownListFor(p => p.ContactOwnerID, ViewBag.Owner as SelectList, new { @class = "form-control formFeildText" })
        </div>
    </div>
    <div class="form-group">
        <div class="headerText"></div>
    </div>
}
