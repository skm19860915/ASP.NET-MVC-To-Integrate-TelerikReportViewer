@using ePonti.BLL.Common
@using ePonti.BOL
@using GridMvc.Html;

@model GetSoInfoBySoID_Result

@{
    ViewBag.Title = "Sales Order Info";
    var ViewID = Model.View;
    var nav = Url.Nav(EnumWrapper.Pages.SoDetails, ViewID);
    var projectID = ViewBag.ProjectID;
    var isApproved = ((bool?)ViewBag.IsApproved) ?? false;
    decimal? TotalHrs = 0.0M, TotalPrice = 0.0M, TotalLabor = 0.0M, SubtotalInstalled = 0.0M;
}
<div class="editableArea" id="editableArea"></div>
<!-- This is the Viewable Area of the page -->
<div id="viewArea">
    <div class="col-sm-12 col-lg-12 pageHeader">
        <div class="col-sm-11 col-lg-11 homeMenuText">@ViewBag.Title</div>
        <div>
            <a href="@Url.ActionPrev()" class="homeLinks"><img src="~/images/Cancel.png" width="20"></a>
            @Html.Hidden("SOID", Model.View, new { id = "CreatedSOId" })
            @Html.Hidden("ProjectID", (int)projectID)
        </div>
    </div>
    <div class="container-fluid">
        <div class="jumbotron jumbotron-fluid">
            <div class="row">
                <div class="headerText">@Model.DisplayName</div>
            </div>
            <div class="row">
                <div>
                    <div class="row">
                        <div class="col-sm-6 subText">@Model.Job</div>
                    </div>
                    <div class="row">
                        <div class="col-sm-6 subText">@Model.Terms</div>
                    </div>
                    <div class="row">
                        <div class="col-sm-6 subText">@Model.Status</div>
                    </div>
                    <div class="row">
                        <div class="col-sm-6 subText">@Model.Created.ToCustomDateString()</div>
                        <div class="col-sm-4 subText">@Model.ApprovedDate.ToCustomDateString()</div>
                    </div>
                    <div class="row">
                        <div class="col-sm-6 subText">@Model.Creator</div>
                        <div class="col-sm-4 subText">@Model.Approver</div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="headerText"></div>
            </div>
            <div class="row">
                <div class="col-sm-5">
                    @if (ViewBag.SyncSuccessMessage != null)
                    {
                        <div class="alert alert-success" role="alert" style="margin-top:60px">
                            <strong>Well done!</strong> @ViewBag.SyncSuccessMessage
                        </div>
                    }
                    @if (ViewBag.SyncErrorMessage != null)
                    {
                        <div class="alert alert-danger" role="alert" style="margin-top:60px">
                            An error occured : @ViewBag.SyncErrorMessage
                        </div>
                    }
                </div>
                <div class="col-sm-5 dropdown buttons">
                    @if (!isApproved)
                    {
                        <button class="btn btn-default" id="open-edit-popup" onclick="openEdit()" role="button" data-url="@Url.Action("Edit", new { id = ViewID })">Edit</button>
                    }
                    <span>
                        <button class="btn btn-default" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">New</button>
                        <ul class="dropdown-menu">
                            <li>@Html.ActionLink("Call", "create", new { controller = "calls", area = "common", projectid = projectID, nav })</li>
                            <li>@Html.ActionLink("Event", "create", new { controller = "events", area = "common", projectid = projectID, nav })</li>
                            <li>@Html.ActionLink("Note", "create", new { controller = "notes", area = "common", projectid = projectID, nav })</li>
                            <li>@Html.ActionLink("Case", "create", new { controller = "cases", area = "common", projectid = projectID, nav })</li>
                            <li>@Html.ActionLink("TimeIt", "create", new { controller = "timeits", area = "common", projectid = projectID, nav })</li>
                        </ul>
                    </span>
                    <span>
                        <a class="btn btn-default" href="@Url.Action("salesorderviewer","report",new { area = "sections", soiid = ViewID, nav })">
                            Reports
                        </a>
                    </span>
                    @if (!isApproved)
                    {
                        <span>
                            <input type="button" class="btn btn-default approve-so" value="Approve" data-url="@Url.Action("ApproveSO")" />
                        </span>
                    }
                    @if (ViewBag.IsQBConnected == true && ViewBag.IsNotSynced == true)
                    {
                        <span>
                            <a style="cursor:pointer;" class="homeLinks save-item-info Sync"><img src="~/images/QbButton.png" width="30"></a>
                        </span>

                        <input type="hidden" id="HDEstInvType" />
                        <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
                            <div class="modal-dialog" role="document">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                        <h4 class="modal-title" id="myModalLabel">Select Item Type</h4>
                                    </div>
                                    <div class="modal-body">
                                        <div class="form-group">
                                            <select id="selectType" class="form-control">
                                                <option value="Inventory">Inventory</option>
                                                <option value="NonInventory">Non Inventory</option>
                                                <option value="Service">Service</option>
                                            </select>
                                        </div>
                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                                        <button type="button" class="btn btn-primary" id="ButtonSync">Sync</button>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="modal fade" id="myModalEstInv" tabindex="-1" role="dialog" aria-labelledby="myModalEstInvLabel">
                            <div class="modal-dialog" role="document">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                        <h4 class="modal-title" id="myModalEstInvLabel">Estimate or Invoice?</h4>
                                    </div>
                                    <div class="modal-body">
                                        <div class="form-group">
                                            <select id="selectEstInvType" class="form-control">
                                                <option value="Estimate">Estimate</option>
                                                <option value="Invoice">Invoice</option>
                                            </select>
                                        </div>
                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                                        <button type="button" class="btn btn-primary" id="ButtonEstInvSync">Sync</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
</div>
            </div>
        </div>
    </div>
    <div class="container-fluid">
        <div class="row">
            <div class="col-sm-offset-8 col-sm-1">
                @if (!isApproved)
                {
                    <a href="@Url.Action("AddItems", new { Id = ViewID, ProjectID = projectID, nav })" class="btn btn-default">Add</a>
                }
            </div>
        </div>
        <div class="row">
            <div class="col-sm-11 list-group">
                @Html.Grid(ViewBag.Parts as List<GetSoInfoPartsBySoID_Result>, "_PartsGrid").Columns(columns =>
           {
               columns.Add().Encoded(false).Sanitized(false).SetWidth(50).RenderValueAs(s => "<a href=\"" + @Url.Action("short", "items", new { area = "common", id = s.ViewID, nav }) + "\"><img src=\"" + Url.Content("~/images/View.png") + "\" width=\"25\"></a><input type =\"hidden\" class=\"part-id\" value=\"" + s.ViewID + "\" />");
               columns.Add(s => s.Item, "PartsItem").Sortable(true).Css("subText").Titled("Part");
               columns.Add(s => s.Qty, "PartsQty").Sortable(true).Css("subTextRight num-format").SetWidth(120).Titled("Qty").RenderValueAs(s => s.Qty.ToFormattedString(2));
               columns.Add(s => s.Hrs, "PartsHrs").Sortable(true).Css("subTextRight num-format").SetWidth(120).Titled("Hrs").RenderValueAs(s => s.Hrs.ToFormattedString(2));
               columns.Add(s => s.Price, "PartsPrice").Sortable(true).Css("subTextRight num-format").SetWidth(120).Titled("Price").RenderValueAs(s => s.Price.ToFormattedString(2));
               columns.Add(s => s.Labor, "PartsLabor").Sortable(true).Css("subTextRight num-format").SetWidth(120).Titled("Labor").RenderValueAs(s => s.Labor.ToFormattedString(2));
               columns.Add(s => s.Installed, "PartsInstalled").Sortable(true).Css("subTextRight num-format").SetWidth(120).Titled("Installed").RenderValueAs(s => s.Installed.ToFormattedString(2));
           }).WithPaging(20, 20, "PartsList")


                @*<table class="table table-hover grids">
                    <tr>
                        <th width="50"></th>
                        <th>Part</th>
                        <th class="col-sm-1 col-lg-1 num-format">Qty</th>
                        <th class="col-sm-1 col-lg-1 num-format">Hrs</th>
                        <th class="col-sm-1 col-lg-1 num-format">Price</th>
                        <th class="col-sm-1 col-lg-1 num-format">Labor</th>
                        <th class="col-sm-1 col-lg-1 num-format">Installed</th>
                    </tr>
                    @foreach (GetSoInfoPartsBySoID_Result item in ViewBag.Parts as List<GetSoInfoPartsBySoID_Result>)
                    {
                        <tr>
                            <td height="50">
                                <a href="@Url.Action("short","items",new { area="common", id=item.ViewID, nav})">
                                    <img src="~/images/View.png" width="20">
                                </a>
                                <input type="hidden" class="part-id" value="@item.ViewID" />
                            </td>
                            <td>@item.Item</td>
                            <td class="num-format">@item.Qty.ToFormattedString(2)</td>
                            <td class="num-format">@item.Hrs.ToFormattedString(2)</td>
                            <td class="num-format">@item.Price.ToFormattedString(4)</td>
                            <td class="num-format">@item.Labor.ToFormattedString(4)</td>
                            <td class="num-format">@item.Installed.ToFormattedString(4)</td>
                            @{
                                TotalHrs += item.Hrs;
                                TotalPrice += item.Price;
                                TotalLabor += item.Labor;
                                SubtotalInstalled += item.Installed;
                            }
                        </tr>
                                }
                    <tr class="footer">
                        <td></td>
                        <td></td>
                        <td><strong>Totals</strong></td>
                        <td class="num-format total-format">@TotalHrs.ToFormattedString(2)</td>
                        <td class="num-format total-format">@TotalPrice.ToFormattedString(4)</td>
                        <td class="num-format total-format">@TotalLabor.ToFormattedString(4)</td>
                        <td class="num-format total-format">@SubtotalInstalled.ToFormattedString(4)</td>
                    </tr>
                </table>*@
            </div>
        </div>
        <div class="row">
            <div class="headerText"></div>
        </div>
    </div>
</div>

@section scripts{
<script>
    $('.Sync').click(function () {
        var SOID = $('#CreatedSOId').val();
        if (SOID != "") {
            //location.href = "@Url.Action("SyncSO")" + "?SOID=" + @Model.View;
            $('#myModalEstInv').modal('show');
        }
    });

    $(document).on('click', '#ButtonEstInvSync', function () {
        $(this).attr("disabled", "disabled");
        $(this).text('Please wait....');
        var SOID = $('#CreatedSOId').val();
        var EstInvType = $("#selectEstInvType").val();
        $("#HDEstInvType").val(EstInvType);
        if (SOID != "") {
            $.ajax({
                url: "@Url.Action("CheckNewItems")",
                type: "POST",
                data: JSON.stringify({ 'SOID': SOID }),
                dataType: "json",
                traditional: true,
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    //alert(data);
                    if (data) {
                        $('#myModalEstInv').modal('hide');
                        $('#myModal').modal('show');
                    } else {
                        location.href = "@Url.Action("SyncSO")" + "?SOID=" + SOID + "&EstInvType=" + $('#HDEstInvType').val();
                    }
                },
                error: function () {
                    alert("An error has occured!!!");
                }
            });

            @*if (1 == 1) {
                location.href = "@Url.Action("SyncPOR")" + "?PORs=" + PORs;
            }
            else {
                $('#CreatedPOId').val(PORs);
                $('#myModal').modal('show');
            }*@
        }
    });
    $(document).on('click', '#ButtonSync', function () {
        $(this).attr("disabled", "disabled");
        $(this).text('Please wait....');
        location.href = "@Url.Action("SyncSO")" + "?SOID=" + $('#CreatedSOId').val() + "&EstInvType=" + $('#HDEstInvType').val() + "&ItemType=" + $('#selectType').val();
        //document.location = '/Common/items/SyncToQBItems/' + $('#CreatedPOId').val() + "&ItemType=" + $('#selectType').val();
    });
</script>
    <script src="@Url.Content("~/Scripts/pages/soinfo.js")" type="text/javascript"></script>
}
