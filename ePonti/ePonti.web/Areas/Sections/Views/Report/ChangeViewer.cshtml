@using Telerik.Reporting
@using Telerik.ReportViewer.Mvc

@{
    ViewBag.Title = "Change Request Viewer";

    Layout = "~/Areas/Common/Views/Shared/_Layout.cshtml";
}
<script src="http://code.jquery.com/jquery-1.9.1.min.js"></script>

<link href="http://kendo.cdn.telerik.com/2015.3.930/styles/kendo.common.min.css" rel="stylesheet" />
<link href="http://kendo.cdn.telerik.com/2015.3.930/styles/kendo.blueopal.min.css" rel="stylesheet" />
<script src="~/ReportViewer/js/telerikReportViewer.kendo-12.0.18.125.min.js"></script>
<script src="~/ReportViewer/js/telerikReportViewer-12.0.18.125.min.js"></script>
<style>
    #changeViewer {
        position: relative;
        width: 100%;
        height: 900px;
        font-family: Verdana, Arial;
    }

        #changeViewer div.pageHeader {
            background-color: white;
        }

    .trv-pages-area .trv-page-container {
        background-color: grey;
    }
</style>
@{
    var typeReportSource = new TypeReportSource() { TypeName = typeof(ePonti.ReportLib.ChangeRequest).AssemblyQualifiedName };
    typeReportSource.Parameters.Add("CorID", ViewBag.CorId);
}
<div class="container-fluid">
    <div class="col-sm-12 pageHeader" id="printdiv">
        <div class="col-sm-11 homeMenuText">@ViewBag.Title</div>
        <div>
            <a class="homeLinks" href="@Url.ActionPrev()"><img src="~/images/Cancel.png" width="20"></a>
        </div>
    </div>
    <div class="row">
        <div class="headerText"></div>
    </div>
    <div class="row">
        <div class="headerText"></div>
    </div>
    <div class="row">
        <div class="headerText"></div>
    </div>
    <div class="row">
        <div class="col-md-12" id="report_div">
            @(Html.TelerikReporting().ReportViewer()
            // Each report viewer must have an id - it will be used by the initialization script
            // to find the element and initialize the report viewer.
            .Id("changeViewer")
            // The URL of the service which will serve reports.
            // The URL corresponds to the name of the controller class (ReportsController).
            // For more information on how to configure the service please check http://www.telerik.com/help/reporting/telerik-reporting-rest-conception.html.
            .ServiceUrl(Url.Content("~/api/reports"))
            // The URL for custom report viewer template. The template can be edited -
            // new functionalities can be added and unneeded ones can be removed.
            // For more information please check http://www.telerik.com/help/reporting/html5-report-viewer-templates.html.
            // .TemplateUrl(Url.Content("~/ReportViewer/templates/telerikReportViewerTemplate-12.0.18.125.html"))
            // Strongly typed ReportSource - TypeReportSource or UriReportSource.
            .ReportSource(typeReportSource)
            // Specifies whether the viewer is in interactive or print preview mode.
            // PrintPreview - Displays the paginated report as if it is printed on paper. Interactivity is not enabled.
            // Interactive - Displays the report in its original width and height with no paging. Additionally interactivity is enabled.
            .ViewMode(ViewMode.PrintPreview)
            // Sets the scale mode of the viewer.
            // Three modes exist currently:
            // FitPage - The whole report will fit on the page (will zoom in or out), regardless of its width and height.
            // FitPageWidth - The report will be zoomed in or out so that the width of the screen and the width of the report match.
            // Specific - Uses the scale to zoom in and out the report.
            .ScaleMode(ScaleMode.FitPageWidth)
            // Zoom in and out the report using the scale
            // 1.0 is equal to 100%, i.e. the original size of the report
            .Scale(1.0)
            // Sets whether the viewer’s client session to be persisted between the page’s refreshes(ex. postback).
            // The session is stored in the browser’s sessionStorage and is available for the duration of the page session.
            .PersistSession(false)
            // Sets the print mode of the viewer.
            .PrintMode(PrintMode.AutoSelect)
            //Switches accessibility mode ON or OFF.
            .EnableAccessibility(false)
            )
        </div>
    </div>
</div>
