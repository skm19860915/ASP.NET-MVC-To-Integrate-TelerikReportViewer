@using ePonti.BLL.Common
@using ePonti.BOL;
@model ePonti.web.Models.ItemModels.EditShortItem
@{
    bool isCorItem = (bool?)ViewBag.IsCorItem ?? false;

    ViewBag.Title = "Project Item Info";

    var item = ViewBag.Item as ePonti.web.Models.ItemModels.ItemDetails;

    string urlUpdateProject = isCorItem ? "UpdateCorInfo" : "UpdateProjectInfo";
    string urlUpdateItemPrice = isCorItem ? "UpdateCorItemPriceInfo" : "UpdateItemPriceInfo";
}

<div class="container body-content" id="viewArea">
    <div class="col-sm-12 pageHeader">
        <div class="col-sm-11 homeMenuText">@item.Label</div>
        <div>
            <a href="@Url.ActionPrev()" class="homeLinks"><img src="~/images/Cancel.png" width="20"></a>
            @if (isCorItem)
            {
                @Html.Hidden("CorItemID", item.ViewID)
                @Html.Hidden("ProjectID", (int?)ViewBag.ProjectID)
                @Html.Hidden("ProjectItemID", (int?)ViewBag.ProjectItemID)
            }
            else
            {
                @Html.Hidden("ItemID", item.ViewID)
                @Html.Hidden("ProjectID", (int)ViewBag.ProjectID)
            }
        </div>
    </div>
    <div class="container-fluid">
        <div class="row">
            <div class="col-sm-8">
                <div class="row"></div>
            </div>
        </div>
        <div class="bs-component">
            <ul class="nav nav-tabs tabText">
                <li class="active"><a href="#project" data-toggle="tab">Project</a></li>
                <li><a href="#descriptions" data-toggle="tab">Descriptions</a></li>
                <li><a href="#price" data-toggle="tab">Price</a></li>
                <li><a href="#labor" data-toggle="tab">Labor</a></li>
            </ul>
            <div id="contactInfoTabs" class="tab-content">
                <div class="tab-pane fade active in" id="project">
                    <div class="form-group">
                        <div class="headerText"></div>
                    </div>
                    <div class="custom-font">
                        <div class="main-form-alert alert soft-hide"></div>
                    </div>
                    <div class="row form-group">
                        <label class="col-sm-2 control-label formLabelText">Area</label>
                        <div class="col-sm-5 formFeildText">
                            @Html.DropDownList("AreaID", ViewBag.Areas as SelectList, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="row form-group">
                        <label class="col-sm-2 control-label formLabelText">Division</label>
                        <div class="col-sm-7 formFeildText">
                            @Html.DropDownList("DivisionID", ViewBag.Divisions as SelectList, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="row form-group">
                        <label class="col-sm-2 control-label formLabelText">POR#</label>
                        <div class="col-sm-5 formFeildText">
                            @item.Por_
                        </div>
                    </div>
                    <div class="row form-group">
                        <label class="col-sm-2 control-label formLabelText">Custody</label>
                        <div class="col-sm-5 formFeildText">@item.Custody</div>
                    </div>
                    <div class="row form-group">
                        <div class="col-sm-offset-7 col-sm-2 dropdown buttons">
                            <a role="button" class="homeLinks update-project" data-url="@Url.Action(urlUpdateProject)"><img src="~/images/Save.png" width="20"></a>
                        </div>
                    </div>
                </div>
                <div class="tab-pane fade" id="descriptions">
                    @using (Html.BeginForm("UpdateProjectItemDescription", "items", FormMethod.Post, htmlAttributes: new { @class = "form-horizontal", id = "update-desc-form" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.Hidden("ViewID",item.ViewID)
                        <div class="row">
                            <div class="headerText descriptions-alert"></div>
                        </div>
                        <div class="row form-group">
                            <label class="col-sm-2 control-label formLabelText">Product</label>
                            <div class="col-sm-8 formFeildText">
                                @*<textarea class="form-control" name="ProductDescription" rows="4">@item.ProductDescription</textarea>*@
                                @Html.TextArea("ProductDescription", @item.ProductDescription, new { @class = "form-control", @rows = "4", @id= "ProductDescription" })
                            </div>
                        </div>
                        <div class="row">
                            <div class="headerText"></div>
                        </div>
                        <div class="row">
                            <div class="headerText"></div>
                        </div>
                        <div class="row">
                            <div class="headerText"></div>
                        </div>
                        <div class="row form-group">
                            <label class="col-sm-2 control-label formLabelText">Sales</label>
                            <div class="col-sm-8 formFeildText">
                                @*<textarea class="form-control" name="SalesDescription" rows="6">@item.SalesDescription</textarea>*@
                                @Html.TextArea("SalesDescription", @item.SalesDescription, new { @class = "form-control", @rows = "6", @id = "SalesDescription" })
                            </div>
                        </div>
                        <div class="row">
                            <div class="headerText"></div>
                        </div>
                        <div class="row">
                            <div class="headerText"></div>
                        </div>
                        <div class="row">
                            <div class="headerText"></div>
                        </div>
                        <div class="row">
                            <div class="headerText"></div>
                        </div>
                        <div class="row">
                            <div class="headerText"></div>
                        </div>
                        <div class="row form-group">
                            <div class="col-sm-offset-7 col-sm-2 dropdown buttons">
                                <a role="button" class="homeLinks .editItem update-desc"><img src="~/images/Save.png" width="20"></a>
                            </div>
                        </div>
                    }
                </div>
                <div class="tab-pane fade" id="price">
                    <div class="row form-group">
                        <div class="headerText"></div>
                    </div>
                    <div class="custom-font">
                        @Html.ValidationSummary()
                        <div class="main-form-alert alert soft-hide"></div>
                    </div>
                    @using (Html.BeginForm(urlUpdateItemPrice, "Items", FormMethod.Post, htmlAttributes: new { @class = "col-sm-offset-1 col-sm-10 col-lg-offset-1 col-lg-10 form-horizontal", id = "price-form" }))
                    {
                        @Html.HiddenFor(p => p.Price.ItemID, new { name = "ItemId" })
                        <div class="row">
                            @Html.LabelFor(p => p.Price.Qty, new { @class = "col-sm-2 control-label formLabelText" })
                            @Html.LabelFor(p => p.Price.UnitCost, new { @class = "col-sm-2 control-label formLabelText" })
                            @Html.LabelFor(p => p.Price.UnitPrice, new { @class = "col-sm-2 control-label formLabelText" })
                            @Html.LabelFor(p => p.Price.Extension, new { @class = "col-sm-1 control-label formLabelText" })
                            @Html.LabelFor(p => p.Price.Margin, new { @class = "col-sm-2 control-label formLabelText" })
                            @Html.LabelFor(p => p.Price.Markup, new { @class = "col-sm-2 control-label formLabelText" })
                        </div>
                        <div class="row form-group">
                            <div class="col-sm-2 col-lg-2 formFeildText">
                                @Html.TextBoxFor(p => p.Price.Qty, new { @class = "form-control num-format format-decimal2" })
                            </div>
                            <div class="col-sm-2 col-lg-2 formFeildText">
                                @Html.TextBoxFor(p => p.Price.UnitCost, new { @class = "form-control num-format format-decimal4" })
                            </div>
                            <div class="col-sm-2 col-lg-2 formFeildText">
                                @Html.TextBoxFor(p => p.Price.UnitPrice, new { @class = "form-control num-format format-decimal4" })
                            </div>
                            <div class="col-sm-1 col-lg-1 formNumTotalsText">
                                @Html.DisplayFor(p => p.Price.Extension)
                            </div>
                            <div class="col-sm-2 col-lg-2 formFeildText">
                                @Html.TextBoxFor(p => p.Price.Margin, new { @class = "form-control num-format", data_value = Model.Price.Margin, data_val = "false" })
                            </div>
                            <div class="col-sm-2 col-lg-2 formFeildText">
                                @Html.TextBoxFor(p => p.Price.Markup, new { @class = "form-control num-format", data_value = Model.Price.Markup, data_val = "false" })
                            </div>
                        </div>
                        <div class="row form-group">
                            <div class="col-sm-4 col-lg-4 formFeildText"></div>
                            @Html.LabelFor(p => p.Price.Tax, new { @class = "col-sm-2 control-label formLabelText" })
                            <div class="col-sm-1 col-lg-1 formNumTotalsText">
                                @Html.DisplayFor(p => p.Price.Tax)
                            </div>
                            <div class="col-sm-2 col-lg-2 formFeildText">
                                @Html.CheckBoxFor(p => p.Price.Taxable)
                                <span>
                                    @Html.LabelFor(p => p.Price.Taxable, new { @class = "control-label formLabelText" })
                                </span>
                            </div>
                        </div>
                        <div class="row form-group">
                            <div class="col-sm-4 col-lg-4 formFeildText"></div>
                            @Html.LabelFor(p => p.Price.Total, new { @class = "col-sm-2 control-label formLabelText" })
                            <div class="col-sm-1 col-lg-1 formNumTotalsText">
                                @Html.DisplayFor(p => p.Price.Total)
                            </div>
                        </div>
                                <div class="row">
                                    <div class="col-sm-1 col-lg-1 formFeildText"></div>
                                    <div class="col-sm-3 col-lg-2 formFeildText">
                                        @Html.CheckBoxFor(p => p.Price.ExcludePOR)
                                        @Html.LabelFor(p => p.Price.ExcludePOR, new { @class = "control-label formLabelText" })
                                    </div>
                                    <div class="col-sm-3 col-lg-2 formFeildText">
                                        @Html.CheckBoxFor(p => p.Price.WarranteePart)
                                        @Html.LabelFor(p => p.Price.WarranteePart, new { @class = "control-label formLabelText" })
                                    </div>
                                    <div class="col-sm-3 col-lg-2 formFeildText">
                                        @Html.CheckBoxFor(p => p.Price.OneOffItem)
                                        @Html.LabelFor(p => p.Price.OneOffItem, new { @class = "control-label formLabelText" })
                                    </div>
                                </div>
                                <div class="row form-group">
                                    <div class="col-sm-offset-7 col-sm-2 dropdown buttons">
                                        <a role="button" class="homeLinks update-price"><img src="~/images/Save.png" width="20"></a>
                                    </div>
                                </div>
                    }
                </div>
                <div class="tab-pane fade" id="labor">
                    <div class="content">
                        <div class="form-group">
                            <div class="headerText"></div>
                        </div>
                        <div class="custom-font">
                            <div class="main-form-alert alert soft-hide"></div>
                        </div>
                        <div class="row">
                            <div class="row form-group">
                                @Html.HiddenFor(p => p.Price.ItemID)
                                <label class="col-sm-2 control-label formLabelText">Stage</label>
                                <div class="col-sm-5 formFeildText">
                                    @Html.DropDownList("labor-stage", ViewBag.ProjectStages as SelectList, new { @class = "form-control drpstage", data_url = Url.Action("GetStageDetails") })
                                </div>
                                <div class="col-sm-3 formFeildText">
                                    <input type="checkbox" id="Taxable1" name="Taxable">
                                    <span><label class="control-label formLabelText">Taxable</label></span>
                                </div>
                            </div>
                            <div class="row form-group">
                                <label class="col-sm-2 control-label formLabelText">Unit Hours</label>
                                <div class="col-sm-2 formFeildText">
                                    @Html.TextBox("labor-unit-hours", item.Hours, new { @class = "form-control num-format number-spinner" })
                                </div>
                                <label class="col-sm-2 control-label formLabelText">Project Total Hours</label>
                                <div class="col-sm-1 formNumTotalsText">@item.ProjectTotalHours.ToFormattedString()</div>
                            </div>
                            <div class="row">
                                <div class="col-sm-offset-2 col-sm-6 list-group">
                                    @Html.Partial("_ProjectLaborView")
                                </div>
                            </div>
                            <div class="col-sm-offset-7 col-sm-2 dropdown buttons">
                                <a role="button" class="homeLinks update-labor" data-url="@Url.Action("UpdateLaborInfo")"><img src="~/images/Save.png" width="20"></a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@section scripts {

    @if (isCorItem)
    {
        <script src="@Url.Content("~/Scripts/pages/iteminfo-short-cor.js")" type="text/javascript"></script>
    }
    else
    {
        <script src="@Url.Content("~/Scripts/pages/iteminfo-short.js")" type="text/javascript"></script>
    }
    <script>
        $(document).ready(function () {
            labortx();
            $(document).on('click', '#Taxable1', function () {
                var q = document.getElementById("Taxable1").checked;
                labortx(q);
            });

            function labortx(q) {
                if (q == true) {
                    $(".labortax").show();
                } else {
                    $(".labortax").hide();
                }
            }
            $('.update-desc').on('click', function () {
                var $form = $('#update-desc-form');
                var $alert = $('.descriptions-alert');
                $.ajax({
                    url: $form.attr('action'),
                    type: 'POST',
                    data: $form.serialize(),
                    success: function (res) {
                        console.log(res);
                        if (res.status == 'error') {
                            var errors = 'Enter correct data and retry.'
                            if (res.errors && res.errors.length > 0) {
                                errors = res.errors.join('<br>');
                            }
                            $alert.html(errors);
                            showAlert($alert, 'danger', -1);
                        }
                        else if (res.status = 'success') {
                            $alert.text('Saved!');
                            showAlert($alert, 'success', 3000);
                        }
                    }
                });
            });
        });

    </script>
}
