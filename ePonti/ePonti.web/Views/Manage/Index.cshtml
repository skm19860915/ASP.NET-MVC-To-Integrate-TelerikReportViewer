@model ePonti.BOL.GetUserProfileInfoBySiteUserID_Result
@{
    ViewBag.Title = "Profile Info";
    Layout = "~/Areas/Common/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid">
    <div class="col-sm-12 pageHeader">
        <div class="col-sm-11 homeMenuText">@ViewBag.Title</div>
        <div>
            <a href="~/Sections/Dashboard" class="homeLinks close-page"><img src="~/images/Cancel.png" width="20"></a>
        </div>
    </div>
    <div class="row">
        <div class="headerText"></div>
    </div>
    <div class="row">
        <div class="headerText"></div>
    </div>
    <div class="row">
        <div class="text-success">@ViewBag.StatusMessage</div>
    </div>
    <div class="container-fluid">
        <div class="col-sm-11 row">
            @using (Html.BeginForm("UpdateProfile", "Manage", FormMethod.Post, htmlAttributes: new { @class = "form-horizontal", id = "main-profile-form" }))
            {
                <div class="content">
                    <div class="main-form-alert alert soft-hide"></div>
                    <div class="row form-group">
                        <label class="col-sm-2 control-label formLabelText">Display Name</label>
                        <div class="col-sm-7 formFeildText">
                            <input class="form-control" type="text" value="@(String.IsNullOrEmpty(Model.UserDisplayName) ? "":Model.UserDisplayName)" name="UserDisplayName">
                        </div>
                    </div>
                    @*<div class="col-sm-5 col-lg-5 form-group">
                            <label class="col-sm-3 col-lg-3 control-label formLabelText">Calendar View</label>
                            <div class="col-sm-8 col-lg-6 formFeildText">
                                <select class="form-control">
                                    <option>[DefaultView1]</option>
                                    <option>[DefaultView2]</option>
                                </select>
                            </div>
                        </div>*@
                    <div class="row form-group">
                        <label class="col-sm-2 control-label formLabelText">Job Title</label>
                        <div class="col-sm-7 formFeildText">
                            <input class="form-control" type="text" value="@(String.IsNullOrEmpty(Model.Job_Title) ? "":Model.Job_Title )" name="Job_Title">
                        </div>
                    </div>
                    <div class="row form-group">
                        <label class="col-sm-2 control-label formLabelText">Color</label>
                        <div class="col-sm-1 formFeildText">
                            <input type="color" value="@(String.IsNullOrEmpty(Model.Calendar_Color) ?"": Model.Calendar_Color)" name="Calendar_Color">
                        </div>
                    </div>
                    <div class="row form-group">
                        <label class="col-sm-2 control-label formLabelText">Phone</label>
                        <div class="col-sm-6 formFeildText">
                            <input class="form-control" type="tel" value="@(String.IsNullOrEmpty(Model.Phone) ? "":Model.Phone)" name="Phone">
                        </div>
                    </div>
                    @*<div class="col-sm-5 col-lg-5 form-group">
                            <label class="col-sm-3 control-label formLabelText">Layout Skin</label>
                            <div class="col-sm-8 col-lg-6 formFeildText">
                                <select class="form-control">
                                    <option>[SkinColor1]</option>
                                    <option>[SkinColor2]</option>
                                </select>
                            </div>
                        </div>*@
                    <div class="row form-group">
                        <label class="col-sm-2 control-label formLabelText">E-Mail</label>
                        <div class="col-sm-6 formFeildText">
                            <input class="form-control" type="email" value="@(String.IsNullOrEmpty(Model.E_Mail) ? "" : Model.E_Mail)" name="E_Mail">
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-sm-offset-2 col-sm-3 formLabelText">
                        @if (ViewBag.HasPassword != null)
                        {
                            @Html.ActionLink("Change your password", "ChangePassword")
                        }
                        else
                        {
                            @Html.ActionLink("Create", "SetPassword")
                        }
                    </div>
                </div>
                <div class="row form-group">
                    <div class="col-sm-offset-7 col-sm-2 dropdown buttons">
                        <a role="button" class="homeLinks update-profile"><img src="~/images/Save.png" width="20"></a>
                    </div>
                </div>
            }
            <div class="row">
                <div class="col-sm-offset-1 col-sm-6 optionGridHeaderText">Communications</div>
            </div>
            @using (Html.BeginForm("UpdateCommunications", "Manage", FormMethod.Post, htmlAttributes: new { @class = "form-horizontal", id = "main-communication-form" }))
            {
                <div class="content">
                    <div class="col-sm-offset-2 col-sm-8 row">
                        <div class="row form-group">
                            <div class="col-sm-5 form-group">
                                <label class="col-sm-6 control-label formLabelText">Cases</label>
                                <div class="col-sm-2 formFeildText">
                                    @Html.CheckBox("Cases")
                                </div>
                            </div>
                            <div class="col-sm-5 form-group">
                                <label class="col-sm-6 control-label formLabelText">Events</label>
                                <div class="col-sm-2 formFeildText">
                                    @Html.CheckBox("Events")
                                </div>
                            </div>
                        </div>
                        <div class="row form-group">
                            <div class="col-sm-5 form-group">
                                <label class="col-sm-6 control-label formLabelText">Calls</label>
                                <div class="col-sm-2 formFeildText">
                                    @Html.CheckBox("Calls")
                                </div>
                            </div>
                            <div class="col-sm-5 form-group">
                                <label class="col-sm-6 control-label formLabelText">WorkOrders</label>
                                <div class="col-sm-2 formFeildText">
                                    @Html.CheckBox("WorkOrders")
                                </div>
                            </div>
                        </div>
                        <div class="row form-group">
                            <div class="col-sm-5 form-group">
                                <label class="col-sm-6 control-label formLabelText">Changes</label>
                                <div class="col-sm-2 formFeildText">
                                    @Html.CheckBox("Change_Order_Requests")
                                </div>
                            </div>
                            <div class="col-sm-5 form-group">
                                <label class="col-sm-6 control-label formLabelText">Deliveries</label>
                                <div class="col-sm-2 formFeildText">
                                    @Html.CheckBox("Deliveries")
                                </div>
                            </div>
                        </div>
                        <div class="row form-group">
                            <div class="col-sm-5 form-group">
                                <label class="col-sm-6 control-label formLabelText">Timekeeper</label>
                                <div class="col-sm-2 formFeildText">
                                    @Html.CheckBox("Timekeeper")
                                </div>
                            </div>
                            <div class="col-sm-5 form-group">
                                <label class="col-sm-6 control-label formLabelText">Purchases</label>
                                <div class="col-sm-2 formFeildText">
                                    @Html.CheckBox("Purchase_Order_Requests")
                                </div>
                            </div>
                        </div>
                        <div class="row form-group">
                            <div class="col-sm-offset-8 col-sm-2 dropdown buttons">
                                <a role="button" class="homeLinks update-communication"><img src="~/images/Save.png" width="20"></a>
                            </div>
                        </div>
                    </div>
                </div>
            }
            @*
                Phone Numbers can used as a second factor of verification in a two-factor authentication system.

                 See <a href="http://go.microsoft.com/fwlink/?LinkId=403804">this article</a>
                    for details on setting up this ASP.NET application to support two-factor authentication using SMS.

                 Uncomment the following block after you have set up two-factor authentication

                <dt>Phone Number:</dt>
                <dd>
                    @(Model.PhoneNumber ?? "None")
                    @if (Model.PhoneNumber != null)
                    {
                        <br />
                        <text>[&nbsp;&nbsp;@Html.ActionLink("Change", "AddPhoneNumber")&nbsp;&nbsp;]</text>
                        using (Html.BeginForm("RemovePhoneNumber", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                        {
                            @Html.AntiForgeryToken()
                            <text>[<input type="submit" value="Remove" class="btn-link" />]</text>
                        }
                    }
                    else
                    {
                        <text>[&nbsp;&nbsp;@Html.ActionLink("Add", "AddPhoneNumber")
                    }
                </dd>
            *@

            @*<dt>Two-Factor Authentication:</dt>
                <dd>
                    <p>
                        There are no two-factor authentication providers configured. See <a href="http://go.microsoft.com/fwlink/?LinkId=403804">this article</a>
                        for details on setting up this ASP.NET application to support two-factor authentication.
                    </p>
                    @if (Model.TwoFactor)
                        {
                            using (Html.BeginForm("DisableTwoFactorAuthentication", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                            {
                                @Html.AntiForgeryToken()
                                <text>Enabled
                                <input type="submit" value="Disable" class="btn btn-link" />
                                </text>
                            }
                        }
                        else
                        {
                            using (Html.BeginForm("EnableTwoFactorAuthentication", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                            {
                                @Html.AntiForgeryToken()
                                <text>Disabled
                                <input type="submit" value="Enable" class="btn btn-link" />
                                </text>
                            }
                        }
                </dd>*@

        </div>
    </div>
</div>

@section scripts{
    <script>

        $('.update-profile').on('click', function () {
            debugger
            console.log('saving...')
            var $form = $('#main-profile-form');
            if ($form.valid()) {
                $('.validation-summary-errors').find('li').remove();
                var $alert = $('.main-form-alert');
                console.log($form.serialize());
                $.ajax({
                    url: "@Url.Action("UpdateProfile")",
                    type: 'POST',
                    data: $form.serialize(),
                    success: function (res) {
                        console.log(res);
                        if (res.status == 'error') {
                            var errors = 'Enter correct data and retry.'
                            if (res.errors && res.errors.length > 0) {
                                errors = res.errors.join('<br>');
                            }
                            $alert.html(errors);
                            showAlert($alert, 'danger', -1);
                        }
                        else if (res.status = 'success') {
                            $alert.html('Profile Updated.');
                            showAlert($alert, 'success');
                            document.location = '/Sections/Dashboard';
                        }
                    }
                });
            }
        })
    </script>

    <script>

        $('.update-communication').on('click', function () {
            debugger
            console.log('saving...')
            var $form = $('#main-communication-form');
            if ($form.valid()) {
                $('.validation-summary-errors').find('li').remove();
                var $alert = $('.main-form-alert');
                console.log($form.serialize());
                $.ajax({
                    url: "@Url.Action("UpdateCommunications")",
                    type: 'POST',
                    data: $form.serialize(),
                    success: function (res) {
                        console.log(res);
                        if (res.status == 'error') {
                            var errors = 'Enter correct data and retry.'
                            if (res.errors && res.errors.length > 0) {
                                errors = res.errors.join('<br>');
                            }
                            $alert.html(errors);
                            showAlert($alert, 'danger', -1);
                        }
                        else if (res.status = 'success') {
                            $alert.html('Communications Updated.');
                            showAlert($alert, 'success');
                            document.location = '/Sections/Dashboard';
                        }
                    }
                });
            }
        })
    </script>
}
